import React, { useEffect, useState } from "react";
import dashboardStore from "../store/dashboardStore";
import {
  StatsCards,
  AIActionsBar,
  AIActionPanel,
  SearchAndFilters,
  MediaGallery,
  RecentActivities,
  ContentAnalytics
} from "./dashboard";

// Dashboard Component
export default function Dashboard() {
  const [aiActionMode, setAiActionMode] = useState(null);
  const [selectedItems, setSelectedItems] = useState([]);
  const [aiPrompt, setAiPrompt] = useState("");
  
  // Get state and actions from the dashboard store
  const {
    // Media items
    filteredMediaItems,
    isLoadingMedia,

    // Recent activities
    recentActivities,
    isLoadingActivities,

    // Dashboard stats
    stats,
    isLoadingStats,

    // Content analytics
    analytics,
    isLoadingAnalytics,

    // Search and filter state
    searchQuery,
    selectedTags,
    viewMode,

    // Error state
    error,

    // Actions
    setViewMode,
    setSearchQuery,
    toggleTag,
    fetchAllDashboardData,
    deleteMediaItem,
  } = dashboardStore();

  // Fetch all dashboard data on component mount
  useEffect(() => {
    fetchAllDashboardData();
  }, [fetchAllDashboardData]);

  // Handle AI prompt submission
  const handleAiPromptSubmit = (e) => {
    e.preventDefault();
    if (!aiPrompt.trim()) return;
    
    // This would connect to your AI backend
    console.log(`AI ${aiActionMode} request:`, aiPrompt, 'for items:', selectedItems);
    
    // Reset the prompt after submission
    setAiPrompt("");
  };

  // Handle media item deletion
  const handleDeleteItem = async (itemId) => {
    const result = await deleteMediaItem(itemId);
    if (!result.success) {
      // Handle error (could show a toast notification here)
      console.error(result.error);
    }
  };

  // Get all unique tags from media items
  const allTags = [
    ...new Set(filteredMediaItems.flatMap((item) => item.tags || [])),
  ];

  return (
    <div className={`flex flex-col bg-gray-100 text-gray-800`}>
      {/* Header */}
      <div className="flex justify-between items-center mb-6 ml-6 mr-6">
        <h1 className="text-2xl font-bold text-jasper-500">AI Media Dashboard</h1>
      </div>

      {/* Main Content */}
      <div className="flex flex-1">
        {/* Main Dashboard */}
        <main className="flex-1 p-6">
          {/* Stats Cards */}
          <StatsCards stats={stats} isLoadingStats={isLoadingStats} />
          
          {/* AI Actions Bar */}
          <AIActionsBar aiActionMode={aiActionMode} setAiActionMode={setAiActionMode} />
          
          {/* AI Action Panel */}
          <AIActionPanel 
            aiActionMode={aiActionMode} 
            selectedItems={selectedItems} 
            aiPrompt={aiPrompt} 
            setAiPrompt={setAiPrompt} 
            setAiActionMode={setAiActionMode} 
            handleAiPromptSubmit={handleAiPromptSubmit} 
          />
          
          {/* Search and Filters */}
          <SearchAndFilters 
            searchQuery={searchQuery} 
            setSearchQuery={setSearchQuery} 
            allTags={allTags} 
            selectedTags={selectedTags} 
            toggleTag={toggleTag} 
            viewMode={viewMode} 
            setViewMode={setViewMode} 
          />
          
          {/* Media Gallery */}
          <MediaGallery 
            filteredMediaItems={filteredMediaItems} 
            isLoadingMedia={isLoadingMedia} 
            viewMode={viewMode} 
            selectedItems={selectedItems} 
            setSelectedItems={setSelectedItems} 
            handleDeleteItem={handleDeleteItem} 
          />
          
          {/* Split Section: Activities and Analytics */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Recent Activities */}
            <RecentActivities 
              recentActivities={recentActivities} 
              isLoadingActivities={isLoadingActivities} 
            />
            
            {/* Content Analytics */}
            <ContentAnalytics 
              analytics={analytics} 
              isLoadingAnalytics={isLoadingAnalytics} 
            />
          </div>
        </main>
      </div>
    </div>
  );
}